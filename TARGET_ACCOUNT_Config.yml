AWSTemplateFormatVersion: 2010-09-09
Description: 'Application Migration Service template for the target AWS account'
Parameters:
  FactoryAWSAccountId:
    Type: String
    Description: Migration Factory AWS Account Id, please replace with the correct target AWS Account Id
    Default: '111122223333'
    AllowedPattern: "[0-9]*"
    ConstraintDescription: AWS Account Id must be numbers
Resources:
  MGNAgentInstallUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub "MGNAgentInstallUser-${AWS::AccountId}"
      Policies:
        -
          PolicyName: LambdaRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'mgn:SendAgentMetricsForMgn'
                  - 'mgn:SendAgentLogsForMgn'
                  - 'mgn:SendClientLogsForMgn'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'mgn:RegisterAgentForMgn'
                  - 'mgn:UpdateAgentSourcePropertiesForMgn'
                  - 'mgn:UpdateAgentReplicationInfoForMgn'
                  - 'mgn:UpdateAgentConversionInfoForMgn'
                  - 'mgn:GetAgentInstallationAssetsForMgn'
                  - 'mgn:GetAgentCommandForMgn'
                  - 'mgn:GetAgentConfirmedResumeInfoForMgn'
                  - 'mgn:GetAgentRuntimeConfigurationForMgn'
                  - 'mgn:UpdateAgentBacklogForMgn'
                  - 'mgn:GetAgentReplicationInfoForMgn'
                Resource: '*'
              - Effect: Allow
                Action: 'mgn:TagResource'
                Resource: 'arn:aws:mgn:*:*:source-server/*'
  
  FactoryAutomationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'Factory-Automation'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Ref FactoryAWSAccountId
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        -
          PolicyName: LambdaRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - 'iam:PassRole'
                  - 'sts:AssumeRole'
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'mgn:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'kms:ListAliases'
                  - 'kms:DescribeKey'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeAccountAttributes'
                  - 'ec2:DescribeAvailabilityZones'
                  - 'ec2:DescribeImages'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeInstanceTypes'
                  - 'ec2:DescribeInstanceAttribute'
                  - 'ec2:DescribeInstanceStatus'
                  - 'ec2:DescribeInstanceTypeOfferings'
                  - 'ec2:DescribeLaunchTemplateVersions'
                  - 'ec2:DescribeLaunchTemplates'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:GetEbsEncryptionByDefault'
                  - 'ec2:GetEbsDefaultKmsKeyId'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:PassRole'
                Resource:
                  - >-
                    arn:aws:iam::*:role/service-role/AWSApplicationMigrationConversionServerRole
                Condition:
                  StringEquals:
                    'iam:PassedToService': ec2.amazonaws.com
              - Effect: Allow
                Action:
                  - 'ec2:DeleteSnapshot'
                Resource: 'arn:aws:ec2:*:*:snapshot/*'
                Condition:
                  'Null':
                    'aws:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:CreateLaunchTemplateVersion'
                  - 'ec2:ModifyLaunchTemplate'
                  - 'ec2:DeleteLaunchTemplateVersions'
                Resource: 'arn:aws:ec2:*:*:launch-template/*'
                Condition:
                  'Null':
                    'aws:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:DeleteVolume'
                Resource: 'arn:aws:ec2:*:*:volume/*'
                Condition:
                  'Null':
                    'aws:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:TerminateInstances'
                  - 'ec2:ModifyInstanceAttribute'
                  - 'ec2:GetConsoleOutput'
                  - 'ec2:GetConsoleScreenshot'
                Resource: 'arn:aws:ec2:*:*:instance/*'
                Condition:
                  'Null':
                    'aws:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:RevokeSecurityGroupEgress'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                  - 'ec2:AuthorizeSecurityGroupEgress'
                Resource: 'arn:aws:ec2:*:*:security-group/*'
                Condition:
                  'Null':
                    'aws:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:CreateVolume'
                Resource: 'arn:aws:ec2:*:*:volume/*'
                Condition:
                  'Null':
                    'aws:RequestTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action: 'ec2:CreateSecurityGroup'
                Resource: 'arn:aws:ec2:*:*:vpc/*'
              - Effect: Allow
                Action:
                  - 'ec2:CreateSecurityGroup'
                Resource: 'arn:aws:ec2:*:*:security-group/*'
                Condition:
                  'Null':
                    'aws:RequestTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:CreateSnapshot'
                Resource: 'arn:aws:ec2:*:*:volume/*'
                Condition:
                  'Null':
                    'ec2:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:CreateSnapshot'
                Resource: 'arn:aws:ec2:*:*:snapshot/*'
                Condition:
                  'Null':
                    'aws:RequestTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:DetachVolume'
                  - 'ec2:AttachVolume'
                Resource: 'arn:aws:ec2:*:*:instance/*'
                Condition:
                  'Null':
                    'ec2:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:AttachVolume'
                Resource: 'arn:aws:ec2:*:*:volume/*'
                Condition:
                  'Null':
                    'ec2:ResourceTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:DetachVolume'
                Resource: 'arn:aws:ec2:*:*:volume/*'
              - Effect: Allow
                Action:
                  - 'ec2:RunInstances'
                Resource: 'arn:aws:ec2:*:*:instance/*'
                Condition:
                  'Null':
                    'aws:RequestTag/AWSApplicationMigrationServiceManaged': 'false'
              - Effect: Allow
                Action:
                  - 'ec2:RunInstances'
                Resource:
                  - 'arn:aws:ec2:*:*:security-group/*'
                  - 'arn:aws:ec2:*:*:volume/*'
                  - 'arn:aws:ec2:*:*:subnet/*'
                  - 'arn:aws:ec2:*:*:image/*'
                  - 'arn:aws:ec2:*:*:network-interface/*'
                  - 'arn:aws:ec2:*:*:launch-template/*'
              - Effect: Allow
                Action: 'ec2:CreateTags'
                Resource:
                  - 'arn:aws:ec2:*:*:security-group/*'
                  - 'arn:aws:ec2:*:*:volume/*'
                  - 'arn:aws:ec2:*:*:snapshot/*'
                  - 'arn:aws:ec2:*:*:instance/*'
                Condition:
                  StringEquals:
                    'ec2:CreateAction':
                      - CreateSecurityGroup
                      - CreateVolume
                      - CreateSnapshot
                      - RunInstances

  FactoryExeServerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'Factory-ExeServer'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              AWS:
                - !Ref FactoryAWSAccountId
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        -
          PolicyName: LambdaRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action:
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:GetSecretValue'
                  - 'secretsmanager:ListSecrets'
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'mgn:DescribeJobLogItems'
                  - 'mgn:DescribeJobs'
                  - 'mgn:DescribeSourceServers'
                  - 'mgn:DescribeReplicationConfigurationTemplates'
                  - 'mgn:GetLaunchConfiguration'
                  - 'mgn:GetReplicationConfiguration'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeLaunchTemplateVersions'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                Resource: '*'

  MGNAccessKeyId:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref MGNAgentInstallUser
  MGNUserSecrets:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: String
      Name: MGNAgentInstallUser
      SecretString: !Sub '{"AccessKeyId":"${MGNAccessKeyId}", "SecretAccessKey":"${MGNAccessKeyId.SecretAccessKey}"}'
        
        
